---
- name: pull elasticsearch docker image
  docker_image:
    name: elasticsearch
    source: pull
    tag: "{{ elk_version_tag }}"
  become: true
- name: create elk_elasticsearch_data docker volume
  docker_volume:
    name: elk_elasticsearch_data
  become: true
- name: increase max memory for elasticsearch
  shell: sysctl -w vm.max_map_count=262144
  become: true
- name: run elasticsearch docker container
  docker_container:
    name: elk_elasticsearch
    image: "elasticsearch:{{ elk_version_tag }}"
    state: started
    restart_policy: unless-stopped
    ports:
    - "{{ elasticsearch_rest_port }}:9200"
    - "{{ elasticsearch_com_port }}:9300"
    volumes:
    - elk_elasticsearch_data:/usr/share/elasticsearch/data
    env:
      http.host: "0.0.0.0"
      transport.host: "0.0.0.0"
      xpack.security.enabled: "true"
      cluster.routing.allocation.disk.threshold_enabled: "true"
      cluster.routing.allocation.disk.watermark.flood_stage: "1gb"
      cluster.routing.allocation.disk.watermark.low: "5gb"
      cluster.routing.allocation.disk.watermark.high: "2gb"
      cluster.name: "elk"
      discovery.type: "single-node"
      ELASTIC_PASSWORD: "{{ xpack_password }}"
    ulimits:
    - nofile:65536:65536
  become: true
- name: create logstash_writer role
  shell: "docker exec elk_elasticsearch curl -X POST -u elastic:{{ xpack_password }} http://localhost:9200/_security/role/logstash_writer -H 'Content-Type: application/json' -d '{ \"cluster\": [\"manage_index_templates\", \"monitor\", \"manage_ilm\"], \"indices\": [ { \"names\": [ \"logstash-*\" ], \"privileges\": [\"write\",\"delete\",\"create_index\",\"manage\",\"manage_ilm\"] } ] }'"
  register: task_result
  until: task_result.rc == 0
  retries: 10
  delay: 7
  become: true
- name: create and set logstash user password
  shell: "docker exec elk_elasticsearch curl -X POST -u elastic:{{ xpack_password }} localhost:9200/_security/user/{{ logstash_es_username }} -H 'Content-Type: application/json' -d'{ \"password\" : \"{{ logstash_es_password }}\", \"roles\" : [ \"logstash_writer\"] }'"
  register: task_result
  until: task_result.rc == 0
  retries: 10
  delay: 10
  become: true
